version: '3.9'

services:
  nginx:
    build: ./nginx
    ports:
      - "80:80"
    depends_on:
      - frontend
      - backend
    restart: always
    networks:
      - tmc_network

  frontend:
    build: ./frontend
    depends_on:
      - backend
    develop:
      watch:
        - action: sync+restart
          path: ./frontend/src/*
          target: /app/*
    restart: always
    networks:
      - tmc_network

  backend:
    build: ./backend
    depends_on:
      - redis
    environment:
      - REDIS_HOST=redis
      - NEO4j_USER=${NEO4J_USER}
      - NEO4j_PASSWORD=${NEO4J_PASSWORD}
      - NEO4j_URL=${NEO4J_URI}
    develop:
      watch:
        - action: sync+restart
          path: ./backend/src/*
          target: /app/*
    restart: always
    networks:
      - tmc_network

  aiogram_bot:
    build: ./aiogram_bot
    environment:
      - BOT_TOKEN=${AIOGRAM_BOT_TOKEN}
      - NEO4j_USER=${NEO4J_USER}
      - NEO4j_PASSWORD=${NEO4J_PASSWORD}
      - NEO4j_URL=${NEO4J_URI}
      - REDIS_URL=${REDIS_URI}
    develop:
      watch:
        - action: sync+restart
          path: ./aiogram_bot/src/bot.py
          target: /app/bot.py
    restart: always
    networks:
      - tmc_network

  redis:
    image: redis:alpine
    volumes:
      - redis_data:/data
    restart: always
    networks:
      - tmc_network

  #1c_db:
  #  build: ./1c_db
  #  restart: always
  #  networks:
  #    - tmc_network

  #postgres:
  #  image: postgres:13
  #  ports:
  #  - "5432:5432"
  #  environment:
  #    - POSTGRES_DB=tmc
  #    - POSTGRES_USER=mille
  #    - POSTGRES_PASSWORD=hrefxCp_0
  #  volumes:
  #    - postgres_data:/var/lib/postgresql/data
  #  networks:
  #    - tmc_network

  neo4j:
    image: neo4j:latest
    ports:
      - "7474:7474"
      - "7687:7687"
    environment:
      - NEO4J_AUTH=${NEO4J_USER}/${NEO4J_PASSWORD}
      - NEO4J_PLUGINS=["apoc"]
    volumes:
      - neo4j_data:/data
    restart: always
    networks:
      - tmc_network

  #portainer:
  #  image: portainer/portainer-ee:2.21.4
  #  ports:
  #    - "8000:8000"
  #    - "9443:9443"
  #  volumes:
  #    - /var/run/docker.sock:/var/run/docker.sock
  #    - portainer_data:/data
  #  restart: always
  #  networks:
  #    - tmc_network


volumes:
  #postgres_data:
  redis_data:
  neo4j_data:
  #portainer_data:

networks:
  tmc_network:
    driver: bridge